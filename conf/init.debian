#!/bin/bash
### BEGIN INIT INFO
# Provides:          kafka
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Startup script for Kafka server
# Description:       Kafka is a high-throughput distributed messaging system.
### END INIT INFO
#
# /etc/init.d/kafka
#
# Startup script for kafka
#
# chkconfig: 2345 20 80
# description: Starts and stops kafka


. /lib/lsb/init-functions

SCALA_VERSION="2.8.0"

PID=/var/run/kafka.pid

NAME="kafka"
DESC="distributed messaging system"

if [ -f /etc/default/kafka ]; then
  . /etc/default/kafka
fi

running() {
  kill -0 `cat ${PID}` > /dev/null 2>&1
}

find_java() {
  if [ ! -z "$JAVA_HOME" ]; then
    return
  fi
  JAVA_DEB="$(readlink -f /usr/bin/java | sed 's:/bin/java::')"
  for dir in /opt/jdk /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home /usr/java/default "$JAVA_DEB"; do
    if [ -x "$dir/bin/java" ]; then
      JAVA_HOME="$dir"
      break
    fi
  done
}

find_java
JAVA=${JAVA_HOME}/bin/java

# Build up classpath
KAFKA_CLASSPATH="`find $KAFKA_HOME -name 'kafka_*.jar'`"
for jar in `find $KAFKA_HOME/libs -name '*.jar'`; do
  KAFKA_CLASSPATH+=":$jar"
done


if [ -z "$KAFKA_JAVA_OPTS" ]; then
 KAFKA_JAVA_OPTS="-server $KAFKA_JVM_PERFORMANCE_OPTS $KAFKA_LOG4J_OPTS"
fi

KAFKA_CMD="-classpath ${KAFKA_CLASSPATH} ${KAFKA_JAVA_OPTS} kafka.Kafka $KAFKA_CONF/server.properties"

start_kafka() {

 if [ ! -x ${JAVA} ]; then
   echo "FAIL"
   echo "*** ${JAVA} doesn't exist -- check JAVA_HOME?"
   exit 1
 fi

  start-stop-daemon --start --background --quiet --pidfile ${PID} --make-pidfile --chuid ${KAFKA_USER} --chdir ${KAFKA_HOME} \
        --startas $JAVA -- ${KAFKA_CMD} >>$KAFKA_LOG 2>&1 || true
}

stop_kafka() {
  start-stop-daemon --stop --quiet --pidfile ${PID} \
        --exec $JAVA -- ${KAFKA_CMD} || true
}

status_kafka() {
  status_of_proc -p ${PID} $NAME $NAME && exit 0 || exit $?
}

case "$1" in
  start)
    log_daemon_msg "Starting $DESC" "$NAME"
    start_kafka
    log_end_msg $?
    ;;
  stop)
    log_daemon_msg "Stopping $DESC" "$NAME"
    stop_kafka
    log_end_msg $?
   ;;
  restart|force-reload)
    log_daemon_msg "Restarting $DESC" "$NAME"
    stop_kafka
    sleep 1
    start_kafka
    log_end_msg $?
    ;;
  status)
    status_kafka
    ;;
  *)
    echo "Usage: $NAME {start|stop|restart|status}" >&2
    exit 1
    ;;
esac


exit 0
